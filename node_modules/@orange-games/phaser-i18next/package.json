{
  "_args": [
    [
      {
        "raw": "@orange-games/phaser-i18next@git+https://github.com/koreezgames/phaser-i18next.git",
        "scope": "@orange-games",
        "escapedName": "@orange-games%2fphaser-i18next",
        "name": "@orange-games/phaser-i18next",
        "rawSpec": "git+https://github.com/koreezgames/phaser-i18next.git",
        "spec": "git+https://github.com/koreezgames/phaser-i18next.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:koreezgames/phaser-i18next.git",
          "sshUrl": "git+ssh://git@github.com/koreezgames/phaser-i18next.git",
          "httpsUrl": "git+https://github.com/koreezgames/phaser-i18next.git",
          "gitUrl": "git://github.com/koreezgames/phaser-i18next.git",
          "shortcut": "github:koreezgames/phaser-i18next",
          "directUrl": "https://raw.githubusercontent.com/koreezgames/phaser-i18next/master/package.json"
        }
      },
      "/Users/khachatur/Projects/JS Phaser/literatus"
    ]
  ],
  "_from": "git+https://github.com/koreezgames/phaser-i18next.git",
  "_id": "@orange-games/phaser-i18next@0.1.1",
  "_inCache": true,
  "_location": "/@orange-games/phaser-i18next",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@orange-games/phaser-i18next@git+https://github.com/koreezgames/phaser-i18next.git",
    "scope": "@orange-games",
    "escapedName": "@orange-games%2fphaser-i18next",
    "name": "@orange-games/phaser-i18next",
    "rawSpec": "git+https://github.com/koreezgames/phaser-i18next.git",
    "spec": "git+https://github.com/koreezgames/phaser-i18next.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:koreezgames/phaser-i18next.git",
      "sshUrl": "git+ssh://git@github.com/koreezgames/phaser-i18next.git",
      "httpsUrl": "git+https://github.com/koreezgames/phaser-i18next.git",
      "gitUrl": "git://github.com/koreezgames/phaser-i18next.git",
      "shortcut": "github:koreezgames/phaser-i18next",
      "directUrl": "https://raw.githubusercontent.com/koreezgames/phaser-i18next/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/koreezgames/phaser-i18next.git#6378206b970edc6dfa84d6cc37b8373766160368",
  "_shasum": "d838e91aae403a04f910f1fd5918bfd7a343aca7",
  "_shrinkwrap": null,
  "_spec": "@orange-games/phaser-i18next@git+https://github.com/koreezgames/phaser-i18next.git",
  "_where": "/Users/khachatur/Projects/JS Phaser/literatus",
  "author": {
    "name": "OrangeGames"
  },
  "bugs": {
    "url": "https://github.com/orange-games/phaser-i18next/issues"
  },
  "config": {
    "name": "phaser-i18next"
  },
  "contributors": [
    {
      "name": "Ale Bles",
      "email": "a.bles@orangegames.com"
    }
  ],
  "dependencies": {
    "i18next": "^6.1.2"
  },
  "description": "Phaser plugin for translations using i18next.",
  "devDependencies": {
    "@orange-games/phaser-nineslice": "^2.0.0",
    "@types/i18next": "^2.3.35",
    "grunt": "1.0.x",
    "grunt-banner": "^0.6.0",
    "grunt-contrib-clean": "0.6.0",
    "grunt-contrib-connect": "^0.11.2",
    "grunt-contrib-uglify": "^0.11.0",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-ts": "^6.0.0-beta.11",
    "phaser": "2.6.2",
    "typescript": "2.1.x"
  },
  "gitHead": "6378206b970edc6dfa84d6cc37b8373766160368",
  "homepage": "https://github.com/orange-games/phaser-i18next#readme",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/orange-games/phaser-i18next/raw/master/LICENSE"
    }
  ],
  "name": "@orange-games/phaser-i18next",
  "optionalDependencies": {},
  "readme": "Phaser i18next\n==============\nPhaser i18next is a plugin for Phaser that allows you to have seamless translations in your game. It uses [i18next](https://github.com/i18next/i18next) as it's source for translations management, which is widely adopted by the JS community in other projects as well.\n\nKey features:\n* Support for translations namespaces\n* Simple key/value JSON\n* Seamless switching of languages\n* No extra function calls for translating strings, directly build into Phaser's Text object\n\nGetting Started\n---------------\nFirst you want to get a fresh copy of the plugin. You can get it from this repo or from npm, ain't that handy.\n```\nnpm install @orange-games/phaser-i18next --save-dev\n```\n\nNext up you'd want to add it to your list of js sources you load into your game\n```html\n//Local installed version\n<script src=\"node_modules/@orange-games/phaser-i18next/build/phaser-i18next.js\"></script>\n//Or use our cdn:\n<script src=\"//cdn.fbrq.io/phaser-i18next/v0.0.1/phaser-i18next.min.js\"></script>\n```\n\nAfter adding the script to the page you can activate it by enabling the plugin:\n```javascript\n//Load the plugin with the options, for more details on all possible options, see: http://i18next.github.io/i18next/pages/doc_init.html\ngame.plugins.add(PhaserI18n.Plugin, {\n    fallbackLng: 'en'\n});\n```\n\nUsage\n-----\nFirst up, you need to preload the languages you wish to have in the game.\n```javascript\n//And here we preload all locales for our game\ngame.load.locale(\n    //all the languages we support: (en, de, nl)\n    languages,\n    //The path from which we can load the translations, by default this path also includes the translation namespace\n    //But since we only have one namespace, we skip this for now.\n    '/locales/{{lng}}.json',\n    //The namespaces on which the translations are handled, defaults to ['translation']\n    ['translation']\n);\n```\n\ni18next plugins\n---------------\ni18next has a very nice set of [plugins](http://i18next.com/docs/ecosystem/) you can use in order to enhance your i18n experience. You can still leverage the power of these plugins by pasing them when you load this Phaser Plugin. All feature should work out of the box.\nYou can pass an indefinite amount of plugins to the plugin constructor, just be mindfull that the first argument should be the i18n config:\n```javascript\n            //Load the plugin with the options, for more details on all possible options, see: http://i18next.github.io/i18next/pages/doc_init.html\n            game.plugins.add(PhaserI18n.Plugin, {\n                    //Configure the language we fall back to (defaults to 'dev')\n                    fallbackLng: 'en',\n                    debug: true,\n                    load: 'languageOnly'\n                },\n                //From here we can add any i18next plugin we'd like to use, new plugins can be added comma-seperated\n                window.i18nextBrowserLanguageDetector\n            );\n```\n\nManage translations\n-------------------\nWhen you're all done and set up for translations and have your key value file, next up is starting to translate them. For smaller games this is fairly simple and still managable by editing your translations in a text file.\nBut when you start with bigger games and more translations (and translation namespaces) you want to manage your translations better, and maybe even use external translator services.\n\nTwo of those service you could use are [locize](https://locize.com/) and/or [Poeditor](https://poeditor.com). Both these services allow you to online edit key value JSON translations that are used in i18next.\nThe advantage of using suchs tools is that it's easier to allow external people work on your translations and they aggragate the statistics of your projects (translation completion, languages managed, etc.) \n\nTodo\n----\n* Expose more powerfull feature of i18next\n* Extend documentation\n\nDisclaimer\n----------\nWe at OrangeGames just love playing and creating awesome games. We aren't affiliated with Phaser.io or i18next. We just needed some awesome translations in our awesome HTML5 games. Feel free to use it for enhancing your own awesome games!\n\nPhaser i18next is distributed under the MIT license. All 3rd party libraries and components are distributed under their\nrespective license terms.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/orange-games/phaser-i18next.git"
  },
  "version": "0.1.1"
}
